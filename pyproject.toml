[tool.poetry]
name = "simple-pipeline"
version = "0.1.0"
description = ""
authors = ["rxmrsd <morisada_keisuke@retail-ai.jp>"]
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.13.0"


[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
mypy = "^1.8.0"
ruff = "^0.2.2"

[tool.poetry.group.pipeline]
optional = true
[tool.poetry.group.pipeline.dependencies]
kfp = "^2.7.0"
google-cloud-aiplatform = "^1.42.1"
python-dotenv = "^1.0.1"


[tool.poetry.group.common.dependencies]
click = "^8.1.7"

[tool.poetry.group.dataframe]
optional = true
[tool.poetry.group.dataframe.dependencies]
google-cloud-bigquery = "^3.17.2"
pandas = "^2.2.0"
db-dtypes = "^1.2.0"
pyarrow = "^15.0.0"
fastparquet = "^2024.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = [
    "E",   # pycodestype error
    "W",   # pycodestyle warning
    "F",   # pyflakes
    "C90", # mccabe
    "I",   # isort
    "D",   # pydocstyle
    "B",   # flake8-bugbear
    "COM", # flake8-commas
    "S",   # flake8-bandit 
    "PTH", # flake8-use-pathlib 
]
ignore = [
    "D415", # pydocstyle about First line should end with a '.' , '?' or '!'
    "E501", # line too long, handled by black
    "S301", # pickle
]
unfixable = [
    "F401", # disable auto-fix for unused-imports
    "F841", # disable auto-fix for unused-variable
]
target-version = "py39"

[tool.ruff.per-file-ignores]
# ignore assert error only in unnit-test
"test_*.py" = ["S101"]
"*_test.py" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10